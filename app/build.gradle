apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
//apply plugin: 'com.jakewharton.hugo'

ext.languages = ["de", "es", "fa", "fr", "in", "it", "ja", "pl", "pt", "ru", "tr", "zh-rCN", "zh-rTW"]
ext.supportLibraryVersion = '1.0.0'
ext.c_languages = ["de", "es-ES", "fa", "fr", "id", "it", "ja", "pl", "pt-PT", "ru", "tr", "zh-CN", "zh-TW"]
ext.crowdinKey = null

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "de.Maxr1998.xposed.maxlock"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 56
        versionName "7.0.4"
        resConfigs languages
        setProperty("archivesBaseName", "ML-$versionName")
        testInstrumentationRunner = 'androidx.test.runner.AndroidJUnitRunner'
        testInstrumentationRunnerArguments clearPackageData: 'true'

        vectorDrawables.useSupportLibrary = true
    }
    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }
    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            versionNameSuffix "-beta"
        }
    }
    sourceSets {
        main {
            res.srcDirs = [
                    res.srcDirs.toArray()[0],
                    "src/main/res/translations"
            ]
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
    }
    androidExtensions {
        experimental = true
    }
}

def propFile = project.file("keyStore.properties")
if (propFile.exists()) {
    Properties props = new Properties()
    props.load(new FileInputStream(propFile))
    def main = android.signingConfigs.create("main")
    main.storeFile project.file(props["keyStore"])
    main.storePassword props["keyStorePassword"]
    main.keyAlias props["keyAlias"]
    main.keyPassword props["keyPassword"]

    android.buildTypes.release.signingConfig = main
    android.buildTypes.debug.signingConfig = main

    ext.crowdinKey = props["crowdinKey"]
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    // Kotlin extras
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.27.0-eap13"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:0.27.0-eap13"
    implementation 'androidx.core:core-ktx:1.0.1'

    // From JCenter or other repositories
    //-- 3rd-party
    implementation 'com.anjlab.android.iab.v3:library:1.0.38@aar'
    implementation 'com.crossbowffs.remotepreferences:remotepreferences:0.5'
    implementation 'com.github.attenzione:android-ColorPickerPreference:e3aa301016'
    /*implementation('com.google.guava:guava:24.1-jre') {
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    }*/
    implementation 'com.heinrichreimersoftware:material-intro:1.6'
    implementation 'com.twofortyfouram:android-plugin-api-for-locale:1.0.2'
    implementation 'commons-io:commons-io:2.5'
    compileOnly 'de.robv.android.xposed:api:82'
    compileOnly 'de.robv.android.xposed:api:82:sources'
    //-- Android support and Google Services
    implementation "androidx.appcompat:appcompat:1.0.2"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "androidx.browser:browser:1.0.0"
    implementation "com.google.android.material:material:1.1.0-alpha01"
    implementation "androidx.gridlayout:gridlayout:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.1.0-alpha01"
    /* includes all other support-v4 libraries */
    implementation "androidx.fragment:fragment:1.1.0-alpha02"
    implementation 'com.google.android.gms:play-services-analytics:16.0.6'
    //-- Android Architecture components
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    // Local files
    implementation(name: 'PatternLock', ext: 'aar')

    // Testing dependencies
    androidTestUtil 'androidx.test:orchestrator:1.1.1-beta01'
    androidTestImplementation 'androidx.test:rules:1.1.1-beta01'
    androidTestImplementation 'androidx.test:runner:1.1.1-beta01'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    }
    androidTestImplementation('com.github.Zhuinden:espresso-helper:0.1.3') {
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    }
}

task updateTranslations() {
    doLast {
        if (crowdinKey == null)
            return
        for (int i = 0; i < c_languages.size(); i++) {
            String c_lang = c_languages[i]
            if (c_lang == "")
                continue
            String lang = languages[i]
            for (String file : ["strings", "implementation_strings"]) {
                String c_file = "\$PWD/src/main/res/translations/values-$lang/${file}.xml"
                exec {
                    executable "bash"
                    args "-c", "wget -O \"$c_file\" \"https://api.crowdin.com/api/project/MaxLock/export-file?file=${file}.xml&language=$c_lang&key=$crowdinKey\""
                }
            }
        }
    }
}